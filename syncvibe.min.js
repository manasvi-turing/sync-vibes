!function(e){"use strict";const n={version:"1.0.0",feedbacks:[],currentUser:null,config:{storageKey:"syncvibe_data",userStorageKey:"syncvibe_user",showButton:!0,buttonPosition:"bottom-right",theme:"light",maxCommentLength:500},isActive:!1,currentBox:null,isDrawing:!1,drawStartX:0,drawStartY:0,currentDrawBox:null,markersVisible:!0,init:function(e={}){this.config={...this.config,...e},this.loadUser();const n=localStorage.getItem("syncvibe_markers_visible");return null!==n&&(this.markersVisible="true"===n),this.loadFeedbacks(),this.injectStyles(),this.config.showButton&&this.createToggleButton(),this.setupEventListeners(),this.setupRouteChangeListeners(),this.checkScrollToAnnotation(),this},loadUser:function(){try{const e=localStorage.getItem(this.config.userStorageKey);e?(this.currentUser=JSON.parse(e),console.log("Loaded user:",this.currentUser.name)):this.promptUserProfile()}catch(e){console.error("Failed to load user:",e),this.promptUserProfile()}},saveUser:function(){try{localStorage.setItem(this.config.userStorageKey,JSON.stringify(this.currentUser))}catch(e){console.error("Failed to save user:",e)}},promptUserProfile:function(){setTimeout(()=>{this.showUserProfileModal()},100)},showUserProfileModal:function(){const e=document.createElement("div");e.className="sv-modal-overlay",e.style.zIndex="10000000";const n=document.createElement("div");n.className="sv-modal sv-user-profile-modal",n.innerHTML='\n        <div class="sv-modal-header">\n          <div class="sv-modal-title">\n            <span class="material-symbols-outlined" style="vertical-align: middle; margin-right: 8px;">person</span>\n            Welcome to SyncVibes!\n          </div>\n        </div>\n        <div class="sv-modal-body">\n          <p style="color: #6B7280; margin-bottom: 20px; line-height: 1.5;">\n            Please enter your details to start annotating. Your name will appear on all your comments.\n          </p>\n          <div style="margin-bottom: 16px;">\n            <label style="display: block; font-weight: 600; color: #374151; margin-bottom: 6px; font-size: 14px;">\n              Name <span style="color: #EF4444;">*</span>\n            </label>\n            <input \n              type="text" \n              id="sv-user-name" \n              placeholder="John Doe"\n              style="width: 100%; padding: 10px; border: 1px solid #D1D5DB; border-radius: 6px; font-size: 14px; font-family: inherit; box-sizing: border-box;"\n              required\n            />\n          </div>\n          <div style="margin-bottom: 20px;">\n            <label style="display: block; font-weight: 600; color: #374151; margin-bottom: 6px; font-size: 14px;">\n              Email <span style="color: #9CA3AF;">(optional)</span>\n            </label>\n            <input \n              type="email" \n              id="sv-user-email" \n              placeholder="john@example.com"\n              style="width: 100%; padding: 10px; border: 1px solid #D1D5DB; border-radius: 6px; font-size: 14px; font-family: inherit; box-sizing: border-box;"\n            />\n          </div>\n          <button \n            id="sv-user-profile-save"\n            style="width: 100%; padding: 12px; background: #4F46E5; color: white; border: none; border-radius: 8px; font-size: 14px; font-weight: 600; cursor: pointer; transition: all 0.2s;"\n            onmouseover="this.style.background=\'#4338CA\'"\n            onmouseout="this.style.background=\'#4F46E5\'"\n          >\n            Get Started\n          </button>\n        </div>\n      ',e.appendChild(n),document.body.appendChild(e),setTimeout(()=>{document.getElementById("sv-user-name").focus()},100);const t=document.getElementById("sv-user-profile-save"),s=document.getElementById("sv-user-name"),o=document.getElementById("sv-user-email"),i=()=>{const n=s.value.trim(),t=o.value.trim();if(!n)return alert("Please enter your name"),void s.focus();this.currentUser={id:this.generateId(),name:n,email:t||"",createdAt:(new Date).toISOString()},this.saveUser(),e.remove(),console.log("User profile created:",this.currentUser.name)};t.addEventListener("click",i),s.addEventListener("keypress",e=>{"Enter"===e.key&&i()}),o.addEventListener("keypress",e=>{"Enter"===e.key&&i()})},checkScrollToAnnotation:function(){const e=sessionStorage.getItem("fb_scroll_to_id"),n=sessionStorage.getItem("fb_ensure_visible");e&&(sessionStorage.removeItem("fb_scroll_to_id"),"true"===n&&(sessionStorage.removeItem("fb_ensure_visible"),this.markersVisible=!0,localStorage.setItem("syncvibe_markers_visible","true")),setTimeout(()=>{if(this.markersVisible){document.querySelectorAll(".sv-feedback-marker").forEach(e=>{e.style.display="block"}),this.toggleMarkersButton&&(this.toggleMarkersButton.innerHTML='<span class="material-symbols-outlined">visibility</span>',this.toggleMarkersButton.title="Hide markers")}const n=this.feedbacks.find(n=>n.id===e);n&&this.scrollToAnnotation(n)},500))},injectStyles:function(){if(document.getElementById("syncvibe-styles"))return;if(!document.getElementById("google-material-symbols")){const e=document.createElement("link");e.id="google-material-symbols",e.rel="stylesheet",e.href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200",document.head.appendChild(e)}const e=document.createElement("style");e.id="syncvibe-styles",e.textContent="\n        .sv-widget-container {\n          position: fixed;\n          z-index: 999999;\n          display: flex;\n          flex-direction: column;\n          gap: 8px;\n          background: white;\n          padding: 12px;\n          border-radius: 12px;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n          transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n        }\n        \n        .sv-widget-container:hover {\n          box-shadow: 0 12px 32px rgba(0, 0, 0, 0.25);\n          transform: translateY(-4px) scale(1.03);\n        }\n        \n        .sv-widget-container.bottom-right { bottom: 20px; right: 20px; }\n        .sv-widget-container.bottom-left { bottom: 20px; left: 20px; }\n        .sv-widget-container.top-right { top: 20px; right: 20px; }\n        .sv-widget-container.top-left { top: 20px; left: 20px; }\n        \n        .sv-button-row {\n          display: grid;\n          grid-template-columns: 1fr auto;\n          gap: 8px;\n          align-items: center;\n        }\n        \n        .sv-widget-button {\n          padding: 10px 14px;\n          background: #4F46E5;\n          color: white;\n          border: none;\n          border-radius: 8px;\n          cursor: pointer;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n          font-size: 14px;\n          font-weight: 500;\n          box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n          transition: all 0.2s;\n          display: inline-flex;\n          align-items: center;\n          justify-content: center;\n          gap: 6px;\n          white-space: nowrap;\n        }\n        \n        .sv-widget-button span:not(.material-symbols-outlined) {\n          min-width: 70px;\n          text-align: center;\n        }\n        \n        .sv-widget-button .material-symbols-outlined {\n          font-size: 20px;\n        }\n        \n        .sv-widget-button:hover {\n          background: #4338CA;\n          transform: translateY(-2px);\n          box-shadow: 0 6px 12px rgba(0,0,0,0.15);\n        }\n        \n        .sv-widget-button.active {\n          background: #DC2626;\n        }\n        \n        .sv-toggle-markers-btn {\n          min-width: 44px;\n          padding: 10px;\n          justify-content: center;\n        }\n        \n        .sv-stats-bar {\n          display: flex;\n          gap: 8px;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n        }\n        \n        .sv-stat-item {\n          flex: 1;\n          padding: 8px;\n          background: rgba(255, 255, 255, 0.95);\n          border: 1px solid #E5E7EB;\n          border-radius: 6px;\n          text-align: center;\n          display: flex;\n          flex-direction: column;\n          gap: 4px;\n        }\n        \n        .sv-stat-number {\n          color: #4F46E5;\n          font-weight: 700;\n          font-size: 18px;\n          line-height: 1;\n        }\n        \n        .sv-stat-label {\n          color: #6B7280;\n          font-size: 10px;\n          font-weight: 500;\n          text-transform: uppercase;\n          letter-spacing: 0.3px;\n          line-height: 1;\n        }\n        \n        .sv-stat-item:hover {\n          background: #F3F4F6;\n          cursor: pointer;\n          transform: translateY(-1px);\n        }\n        \n        .sv-actions-bar {\n          display: flex;\n          gap: 8px;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n        }\n        \n        .sv-action-btn {\n          flex: 1;\n          padding: 8px;\n          background: rgba(255, 255, 255, 0.95);\n          border: 1px solid #E5E7EB;\n          border-radius: 6px;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: 4px;\n          font-family: inherit;\n          font-size: 12px;\n          font-weight: 500;\n          color: #374151;\n          transition: all 0.2s;\n        }\n        \n        .sv-action-btn .material-symbols-outlined {\n          font-size: 16px;\n        }\n        \n        .sv-action-btn:hover {\n          background: #4F46E5;\n          color: white;\n          border-color: #4F46E5;\n          transform: translateY(-1px);\n        }\n        \n        .sv-action-label {\n          font-size: 11px;\n        }\n        \n        .sv-modal-overlay {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: rgba(0, 0, 0, 0.5);\n          z-index: 1000000;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          backdrop-filter: blur(4px);\n        }\n        \n        .sv-modal {\n          background: white;\n          border-radius: 16px;\n          box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n          max-width: 600px;\n          max-height: 80vh;\n          width: 90%;\n          display: flex;\n          flex-direction: column;\n        }\n        \n        .sv-modal-header {\n          padding: 20px 24px;\n          border-bottom: 1px solid #E5E7EB;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        \n        .sv-modal-title {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n          font-size: 18px;\n          font-weight: 600;\n          color: #111827;\n        }\n        \n        .sv-modal-close {\n          background: none;\n          border: none;\n          cursor: pointer;\n          padding: 4px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          color: #6B7280;\n          transition: all 0.2s;\n          border-radius: 6px;\n        }\n        \n        .sv-modal-close:hover {\n          background: #F3F4F6;\n          color: #111827;\n        }\n        \n        .sv-modal-body {\n          padding: 16px 24px 24px;\n          overflow-y: auto;\n          flex: 1;\n        }\n        \n        .sv-annotation-item {\n          padding: 16px;\n          border: 1px solid #E5E7EB;\n          border-radius: 10px;\n          margin-bottom: 12px;\n          cursor: pointer;\n          transition: all 0.2s;\n        }\n        \n        .sv-annotation-item:hover {\n          border-color: #4F46E5;\n          box-shadow: 0 4px 12px rgba(79, 70, 229, 0.15);\n          transform: translateY(-2px);\n        }\n        \n        .sv-annotation-header {\n          display: flex;\n          align-items: flex-start;\n          gap: 8px;\n          margin-bottom: 10px;\n        }\n        \n        .sv-annotation-icon {\n          color: #4F46E5;\n          font-size: 20px;\n          flex-shrink: 0;\n        }\n        \n        .sv-annotation-meta {\n          flex: 1;\n        }\n        \n        .sv-annotation-page {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n          font-size: 13px;\n          font-weight: 600;\n          color: #4F46E5;\n          margin-bottom: 4px;\n          word-break: break-all;\n        }\n        \n        .sv-annotation-location {\n          font-family: 'Monaco', 'Courier New', monospace;\n          font-size: 11px;\n          color: #6B7280;\n          word-break: break-all;\n        }\n        \n        .sv-annotation-comment {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n          font-size: 14px;\n          color: #374151;\n          line-height: 1.5;\n          padding-left: 28px;\n        }\n        \n        .sv-empty-state {\n          text-align: center;\n          padding: 40px 20px;\n          color: #9CA3AF;\n        }\n        \n        .sv-empty-state .material-symbols-outlined {\n          font-size: 48px;\n          margin-bottom: 12px;\n          opacity: 0.5;\n        }\n        \n        @keyframes pulse {\n          0%, 100% { transform: scale(1); box-shadow: 0 4px 12px rgba(79, 70, 229, 0.3); }\n          50% { transform: scale(1.1); box-shadow: 0 8px 24px rgba(79, 70, 229, 0.6); }\n        }\n        \n        .sv-feedback-marker {\n          position: absolute;\n          border: 3px solid #4F46E5;\n          background: rgba(79, 70, 229, 0.1);\n          cursor: pointer;\n          box-shadow: 0 4px 12px rgba(79, 70, 229, 0.3);\n          z-index: 999998;\n          transition: all 0.2s;\n          pointer-events: auto;\n        }\n        \n        .sv-feedback-marker:hover {\n          background: rgba(79, 70, 229, 0.15);\n          box-shadow: 0 6px 16px rgba(79, 70, 229, 0.5);\n          border-color: #4338CA;\n        }\n        \n        .sv-feedback-marker.active {\n          border: 3px solid #10B981;\n          background: rgba(16, 185, 129, 0.15);\n          box-shadow: 0 6px 20px rgba(16, 185, 129, 0.6);\n          z-index: 999999;\n        }\n        \n        .sv-feedback-marker.active .sv-feedback-marker-label {\n          background: #10B981;\n        }\n        \n        .sv-feedback-marker-label {\n          position: absolute;\n          top: -12px;\n          left: -12px;\n          min-width: 28px;\n          height: 28px;\n          padding: 0 8px;\n          background: #4F46E5;\n          color: white;\n          border: 2px solid white;\n          border-radius: 6px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 13px;\n          font-weight: bold;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n        }\n        \n        .sv-feedback-marker-label::before {\n          content: '#';\n          margin-right: 2px;\n          opacity: 0.9;\n        }\n        \n        .sv-drawing-box {\n          position: absolute;\n          border: 2px dashed #4F46E5;\n          background: rgba(79, 70, 229, 0.08);\n          z-index: 999999;\n          pointer-events: none;\n        }\n        \n        .sv-feedback-box {\n          position: absolute;\n          z-index: 1000000;\n          background: white;\n          border-radius: 12px;\n          box-shadow: 0 10px 40px rgba(0,0,0,0.2);\n          padding: 20px;\n          width: 320px;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n          animation: sv-slide-in 0.3s ease-out;\n        }\n        \n        @keyframes sv-slide-in {\n          from { opacity: 0; transform: translateY(10px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        \n        .sv-feedback-box-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 16px;\n        }\n        \n        .sv-feedback-box-title {\n          font-size: 16px;\n          font-weight: 600;\n          color: #1F2937;\n        }\n        \n        .sv-feedback-box-close {\n          background: none;\n          border: none;\n          font-size: 24px;\n          cursor: pointer;\n          color: #6B7280;\n          padding: 0;\n          width: 24px;\n          height: 24px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n        \n        .sv-comments-history {\n          max-height: 250px;\n          overflow-y: auto;\n          margin-bottom: 16px;\n          padding: 12px;\n          background: #F9FAFB;\n          border-radius: 8px;\n        }\n        \n        .sv-comment-item {\n          margin-bottom: 12px;\n          padding: 10px;\n          background: white;\n          border-radius: 6px;\n          border-left: 3px solid #4F46E5;\n        }\n        \n        .sv-comment-item:last-child {\n          margin-bottom: 0;\n        }\n        \n        .sv-comment-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 6px;\n          gap: 8px;\n        }\n        \n        .sv-comment-author {\n          font-size: 12px;\n          font-weight: 600;\n          color: #4F46E5;\n        }\n        \n        .sv-comment-author-me {\n          font-size: 12px;\n          font-weight: 600;\n          color: #10B981;\n        }\n        \n        .sv-comment-author-me::after {\n          content: ' (you)';\n          font-weight: 400;\n          font-size: 11px;\n          color: #6B7280;\n        }\n        \n        .sv-comment-time {\n          font-size: 11px;\n          color: #9CA3AF;\n          white-space: nowrap;\n        }\n        \n        .sv-comment-text {\n          font-size: 14px;\n          color: #1F2937;\n          line-height: 1.5;\n          word-wrap: break-word;\n        }\n        \n        .sv-no-comments {\n          text-align: center;\n          color: #9CA3AF;\n          font-size: 13px;\n          padding: 20px;\n        }\n        \n        .sv-feedback-textarea {\n          width: 100%;\n          min-height: 80px;\n          padding: 12px;\n          border: 1px solid #D1D5DB;\n          border-radius: 8px;\n          font-family: inherit;\n          font-size: 14px;\n          resize: vertical;\n          box-sizing: border-box;\n        }\n        \n        .sv-feedback-textarea:focus {\n          outline: none;\n          border-color: #4F46E5;\n          box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);\n        }\n        \n        .sv-feedback-actions {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 8px;\n          margin-top: 12px;\n        }\n        \n        .sv-feedback-btn {\n          flex: 1;\n          padding: 10px;\n          border: none;\n          border-radius: 6px;\n          font-size: 14px;\n          font-weight: 500;\n          cursor: pointer;\n          transition: all 0.2s;\n          min-width: 0;\n        }\n        \n        .sv-feedback-btn.sv-feedback-btn-danger {\n          flex-basis: 100%;\n          order: 3;\n        }\n        \n        .sv-feedback-btn-primary {\n          background: #4F46E5;\n          color: white;\n        }\n        \n        .sv-feedback-btn-primary:hover {\n          background: #4338CA;\n        }\n        \n        .sv-feedback-btn-secondary {\n          background: #F3F4F6;\n          color: #374151;\n        }\n        \n        .sv-feedback-btn-secondary:hover {\n          background: #E5E7EB;\n        }\n        \n        .sv-feedback-btn-danger {\n          background: #EF4444;\n          color: white;\n          display: flex;\n          align-items: center;\n          gap: 4px;\n          justify-content: center;\n        }\n        \n        .sv-feedback-btn-danger:hover {\n          background: #DC2626;\n        }\n        \n        .sv-feedback-list {\n          position: fixed;\n          right: 20px;\n          top: 20px;\n          z-index: 999997;\n          background: white;\n          border-radius: 12px;\n          box-shadow: 0 10px 40px rgba(0,0,0,0.2);\n          padding: 16px;\n          width: 280px;\n          max-height: 400px;\n          overflow-y: auto;\n        }\n        \n        .sv-feedback-item {\n          padding: 12px;\n          background: #F9FAFB;\n          border-radius: 8px;\n          margin-bottom: 8px;\n          font-size: 13px;\n        }\n        \n        .sv-feedback-item-text {\n          color: #374151;\n          margin-bottom: 4px;\n        }\n        \n        .sv-feedback-item-meta {\n          color: #9CA3AF;\n          font-size: 11px;\n        }\n        \n        .sv-viewport-warning {\n          position: fixed;\n          top: 80px;\n          left: 50%;\n          transform: translateX(-50%);\n          z-index: 1000001;\n          max-width: 600px;\n          width: 90%;\n          animation: sv-slide-in 0.3s ease-out;\n        }\n        \n        .sv-viewport-warning-content {\n          background: white;\n          border: 2px solid #F59E0B;\n          border-radius: 16px;\n          box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);\n          overflow: hidden;\n        }\n        \n        .sv-viewport-warning-header {\n          background: linear-gradient(135deg, #F59E0B 0%, #D97706 100%);\n          padding: 16px 20px;\n          display: flex;\n          align-items: center;\n          gap: 12px;\n          color: white;\n        }\n        \n        .sv-viewport-warning-header strong {\n          flex: 1;\n          font-size: 16px;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n        }\n        \n        .sv-viewport-warning-icon {\n          font-size: 24px;\n        }\n        \n        .sv-viewport-warning-body {\n          padding: 20px;\n        }\n        \n        .sv-viewport-metric {\n          margin-bottom: 20px;\n          padding-bottom: 20px;\n          border-bottom: 1px solid #E5E7EB;\n        }\n        \n        .sv-viewport-metric:last-of-type {\n          border-bottom: none;\n          margin-bottom: 0;\n          padding-bottom: 0;\n        }\n        \n        .sv-viewport-metric-label {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          font-weight: 600;\n          color: #374151;\n          margin-bottom: 12px;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n          font-size: 14px;\n        }\n        \n        .sv-viewport-metric-label .material-symbols-outlined {\n          font-size: 20px;\n          color: #6B7280;\n        }\n        \n        .sv-viewport-metric-values {\n          display: flex;\n          flex-direction: column;\n          gap: 8px;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n          font-size: 14px;\n          color: #6B7280;\n          padding-left: 28px;\n        }\n        \n        .sv-viewport-metric-values strong {\n          color: #111827;\n          font-family: 'Monaco', 'Courier New', monospace;\n        }\n        \n        .sv-status-badge {\n          display: inline-flex;\n          align-items: center;\n          justify-content: center;\n          width: 24px;\n          height: 24px;\n          border-radius: 50%;\n          font-weight: bold;\n          font-size: 14px;\n          margin-left: 8px;\n          transition: all 0.3s;\n        }\n        \n        .sv-status-badge.sv-status-ok {\n          background: #10B981;\n          color: white;\n        }\n        \n        .sv-status-badge.sv-status-error {\n          background: #EF4444;\n          color: white;\n        }\n        \n        .sv-viewport-warning-hint {\n          display: flex;\n          align-items: flex-start;\n          gap: 8px;\n          background: #F3F4F6;\n          padding: 12px;\n          border-radius: 8px;\n          font-size: 13px;\n          color: #6B7280;\n          line-height: 1.5;\n          margin-top: 16px;\n        }\n        \n        .sv-viewport-warning-hint .material-symbols-outlined {\n          font-size: 20px;\n          color: #9CA3AF;\n          flex-shrink: 0;\n        }\n      ",document.head.appendChild(e)},createToggleButton:function(){const e=document.createElement("div");e.className=`sv-widget-container ${this.config.buttonPosition}`;const n=document.createElement("div");n.className="sv-button-row";const t=document.createElement("button");t.className="sv-widget-button",t.innerHTML='<span class="material-symbols-outlined">chat</span><span>SyncVibes</span>',t.onclick=()=>this.toggleMode(),n.appendChild(t),this.toggleButton=t;const s=document.createElement("button");s.className="sv-widget-button sv-toggle-markers-btn",s.innerHTML=this.markersVisible?'<span class="material-symbols-outlined">visibility</span>':'<span class="material-symbols-outlined">visibility_off</span>',s.title=this.markersVisible?"Hide markers":"Show markers",s.onclick=()=>this.toggleMarkers(),n.appendChild(s),this.toggleMarkersButton=s,e.appendChild(n);const o=document.createElement("div");o.className="sv-stats-bar",o.innerHTML='\n        <div class="sv-stat-item">\n          <div class="sv-stat-number" id="sv-stat-page">0</div>\n          <div class="sv-stat-label">This Page</div>\n        </div>\n        <div class="sv-stat-item">\n          <div class="sv-stat-number" id="sv-stat-total">0</div>\n          <div class="sv-stat-label">Total</div>\n        </div>\n      ',e.appendChild(o),this.statsBar=o;const i=o.children[0],a=o.children[1];i.addEventListener("click",()=>{this.openAnnotationsModal("page")}),a.addEventListener("click",()=>{this.openAnnotationsModal("total")});const r=document.createElement("div");r.className="sv-actions-bar",r.innerHTML='\n        <button class="sv-action-btn" id="sv-export-btn" title="Export annotations to JSON file">\n          <span class="material-symbols-outlined">download</span>\n          <span class="sv-action-label">Export</span>\n        </button>\n        <button class="sv-action-btn" id="sv-import-btn" title="Import annotations from JSON file">\n          <span class="material-symbols-outlined">upload</span>\n          <span class="sv-action-label">Import</span>\n        </button>\n      ',e.appendChild(r);const l=document.createElement("input");l.type="file",l.accept="application/json",l.style.display="none",l.onchange=e=>this.handleImportFile(e),e.appendChild(l),this.fileInput=l,document.body.appendChild(e),this.widgetContainer=e,document.getElementById("sv-export-btn").addEventListener("click",()=>this.exportToFile()),document.getElementById("sv-import-btn").addEventListener("click",()=>l.click()),this.updateStats()},toggleMode:function(){if(this.isActive=!this.isActive,this.toggleButton.classList.toggle("active",this.isActive),this.toggleButton.innerHTML=this.isActive?'<span class="material-symbols-outlined">close</span><span>Close</span>':'<span class="material-symbols-outlined">chat</span><span>SyncVibes</span>',this.isActive&&!this.markersVisible){this.markersVisible=!0;document.querySelectorAll(".sv-feedback-marker").forEach(e=>{e.style.display="block"}),this.toggleMarkersButton.innerHTML='<span class="material-symbols-outlined">visibility</span>',this.toggleMarkersButton.title="Hide markers",localStorage.setItem("syncvibe_markers_visible","true")}this.isActive?(document.body.style.cursor="crosshair",document.body.style.userSelect="none"):(document.body.style.cursor="",document.body.style.userSelect=""),!this.isActive&&this.currentBox&&this.closeCurrentBox()},toggleMarkers:function(){this.markersVisible=!this.markersVisible;document.querySelectorAll(".sv-feedback-marker").forEach(e=>{e.style.display=this.markersVisible?"block":"none"}),!this.markersVisible&&this.currentBox&&this.closeCurrentBox(),this.toggleMarkersButton.innerHTML=this.markersVisible?'<span class="material-symbols-outlined">visibility</span>':'<span class="material-symbols-outlined">visibility_off</span>',this.toggleMarkersButton.title=this.markersVisible?"Hide markers":"Show markers",localStorage.setItem("syncvibe_markers_visible",this.markersVisible.toString())},updateStats:function(){const n=document.getElementById("sv-stat-page"),t=document.getElementById("sv-stat-total");if(!n||!t)return;const s=this.feedbacks.length,o=e.location.href,i=e.location.pathname,a=e.location.hash,r=this.feedbacks.filter(n=>{try{const t=new URL(n.url,e.location.origin);return n.url===o||(t.pathname===i&&t.hash===a||t.pathname===i&&!a&&!t.hash)}catch(e){return n.pathname===i}}).length;n.textContent=r,t.textContent=s},openAnnotationsModal:function(n){const t=e.location.href,s=e.location.pathname,o=e.location.hash;let i=[];i="page"===n?this.feedbacks.filter(n=>{try{const i=new URL(n.url,e.location.origin);return n.url===t||(i.pathname===s&&i.hash===o||i.pathname===s&&!o&&!i.hash)}catch(e){return n.pathname===s}}):this.feedbacks;const a=document.createElement("div");a.className="sv-modal-overlay";const r=document.createElement("div");r.className="sv-modal";const l=document.createElement("div");l.className="sv-modal-header";const c=document.createElement("div");c.className="sv-modal-title",c.innerHTML=`<span class="material-symbols-outlined" style="vertical-align: middle; margin-right: 8px;">bookmark</span>${"page"===n?"This Page":"All"} Annotations (${i.length})`;const d=document.createElement("button");d.className="sv-modal-close",d.innerHTML='<span class="material-symbols-outlined">close</span>',d.title="Close",l.appendChild(c),l.appendChild(d);const p=document.createElement("div");p.className="sv-modal-body",0===i.length?p.innerHTML='\n          <div class="sv-empty-state">\n            <span class="material-symbols-outlined">sentiment_satisfied</span>\n            <div>No annotations yet</div>\n          </div>\n        ':i.forEach(n=>{const t=document.createElement("div");t.className="sv-annotation-item";let s="Unknown",o="";try{const t=new URL(n.url,e.location.origin);s=t.pathname,o=t.hash}catch(e){s=n.pathname||"Unknown"}t.innerHTML=`\n            <div class="sv-annotation-header">\n              <span class="material-symbols-outlined sv-annotation-icon">location_on</span>\n              <div class="sv-annotation-meta">\n                <div class="sv-annotation-page">${s}</div>\n                <div class="sv-annotation-location">${o||"Top of page"} • (${n.x}, ${n.y})</div>\n              </div>\n            </div>\n            <div class="sv-annotation-comment">${n.comment}</div>\n          `,t.addEventListener("click",()=>{this.navigateToAnnotation(n),this.closeModal(a)}),p.appendChild(t)}),r.appendChild(l),r.appendChild(p),a.appendChild(r),d.addEventListener("click",()=>this.closeModal(a)),a.addEventListener("click",e=>{e.target===a&&this.closeModal(a)}),document.body.appendChild(a)},closeModal:function(e){e.remove()},navigateToAnnotation:function(n){if(!this.markersVisible){this.markersVisible=!0;document.querySelectorAll(".sv-feedback-marker").forEach(e=>{e.style.display="block"}),this.toggleMarkersButton&&(this.toggleMarkersButton.innerHTML='<span class="material-symbols-outlined">visibility</span>',this.toggleMarkersButton.title="Hide markers"),localStorage.setItem("syncvibe_markers_visible","true")}const t=e.location.href;n.url!==t?(sessionStorage.setItem("fb_scroll_to_id",n.id),sessionStorage.setItem("fb_ensure_visible","true"),e.location.href=n.url):this.scrollToAnnotation(n)},scrollToAnnotation:function(n){const t=document.querySelector(`[data-feedback-id="${n.id}"]`);t?(t.style.display="block",t.scrollIntoView({behavior:"smooth",block:"center"}),t.style.animation="none",setTimeout(()=>{t.style.animation="pulse 1s ease-in-out 3"},10)):e.scrollTo({top:n.position.pageY-e.innerHeight/2,left:n.position.pageX-e.innerWidth/2,behavior:"smooth"})},setupEventListeners:function(){document.addEventListener("selectstart",e=>{this.isActive&&e.preventDefault()}),document.addEventListener("mousemove",e=>{this.isActive?(document.body.style.cursor="crosshair",document.body.style.userSelect="none",this.isDrawing&&this.currentDrawBox&&this.updateDrawingBox(e.pageX,e.pageY)):(document.body.style.cursor="",document.body.style.userSelect="")}),document.addEventListener("mousedown",e=>{this.isActive&&(e.target.closest(".sv-widget-button")||e.target.closest(".sv-feedback-box")||e.target.closest(".sv-feedback-marker")||(e.preventDefault(),e.stopPropagation(),this.startDrawing(e.pageX,e.pageY)))},!0),document.addEventListener("mouseup",e=>{this.isActive&&this.isDrawing&&(e.preventDefault(),e.stopPropagation(),this.finishDrawing(e.pageX,e.pageY))},!0)},setupRouteChangeListeners:function(){e.addEventListener("popstate",()=>{this.handleRouteChange()});const n=history.pushState,t=history.replaceState,s=this;let o;history.pushState=function(){n.apply(this,arguments),s.handleRouteChange()},history.replaceState=function(){t.apply(this,arguments),s.handleRouteChange()},e.addEventListener("hashchange",()=>{this.handleRouteChange()}),e.addEventListener("resize",()=>{clearTimeout(o),o=setTimeout(()=>{this.recheckViewportMismatch()},300)})},handleRouteChange:function(){console.log("Route changed to:",e.location.pathname),this.displayMarkersForCurrentPage(),this.currentBox&&this.closeCurrentBox(),this.currentDrawBox&&(this.currentDrawBox.remove(),this.currentDrawBox=null),this.isActive&&(this.isActive=!1,this.toggleButton.classList.remove("active"),this.toggleButton.textContent="💬 Feedback",document.body.style.cursor="",document.body.style.userSelect="")},startDrawing:function(e,n){this.isDrawing=!0,this.drawStartX=e,this.drawStartY=n;const t=document.createElement("div");t.className="sv-drawing-box",t.style.left=`${e}px`,t.style.top=`${n}px`,t.style.width="0px",t.style.height="0px",document.body.appendChild(t),this.currentDrawBox=t},updateDrawingBox:function(e,n){if(!this.currentDrawBox)return;const t=Math.min(this.drawStartX,e),s=Math.min(this.drawStartY,n),o=Math.abs(e-this.drawStartX),i=Math.abs(n-this.drawStartY);this.currentDrawBox.style.left=`${t}px`,this.currentDrawBox.style.top=`${s}px`,this.currentDrawBox.style.width=`${o}px`,this.currentDrawBox.style.height=`${i}px`},finishDrawing:function(e,n){this.isDrawing=!1;const t=Math.min(this.drawStartX,e),s=Math.min(this.drawStartY,n),o=Math.abs(e-this.drawStartX),i=Math.abs(n-this.drawStartY);if(o<10||i<10)return this.currentDrawBox&&(this.currentDrawBox.remove(),this.currentDrawBox=null),void this.createFeedbackBox(this.drawStartX,this.drawStartY,100,100);this.createFeedbackBox(t,s,o,i)},calculateBoxPosition:function(n,t,s,o,i,a){const r=20,l=e.innerWidth,c=e.innerHeight,d=e.scrollX,p=e.scrollY;let m,h;return m=n+s+10,h=t,m+i>l+d-r&&(m=n-i-10,m<d+r&&(m=Math.max(d+r,n+s/2-i/2))),m<d+r&&(m=d+r),h=t,h+a>c+p-r&&(h=t+o-a,h<p+r&&(h=c+p-a-r)),h<p+r&&(h=p+r),{left:m,top:h}},createFeedbackBox:function(e,n,t,s){this.closeCurrentBox();const o=document.createElement("div");o.className="sv-feedback-box",o.style.visibility="hidden",o.style.left="0px",o.style.top="0px",o.innerHTML=`\n        <div class="sv-feedback-box-header">\n          <div class="sv-feedback-box-title">Add Feedback</div>\n          <button class="sv-feedback-box-close">×</button>\n        </div>\n        <textarea \n          class="sv-feedback-textarea" \n          placeholder="What's on your mind?"\n          maxlength="${this.config.maxCommentLength}"\n        ></textarea>\n        <div class="sv-feedback-actions">\n          <button class="sv-feedback-btn sv-feedback-btn-secondary">Cancel</button>\n          <button class="sv-feedback-btn sv-feedback-btn-primary">Save</button>\n        </div>\n      `,document.body.appendChild(o);const i=o.offsetWidth,a=o.offsetHeight,r=this.calculateBoxPosition(e,n,t,s,i,a);o.style.left=`${r.left}px`,o.style.top=`${r.top}px`,o.style.visibility="visible",this.currentBox={element:o,x:e,y:n,width:t,height:s};const l=o.querySelector(".sv-feedback-textarea");l.focus(),o.querySelector(".sv-feedback-box-close").onclick=()=>this.cancelFeedback(),o.querySelector(".sv-feedback-btn-secondary").onclick=()=>this.cancelFeedback(),o.querySelector(".sv-feedback-btn-primary").onclick=()=>this.saveFeedback(l.value,e,n,t,s);const c=e=>{"Escape"===e.key&&(this.cancelFeedback(),document.removeEventListener("keydown",c))};document.addEventListener("keydown",c),o._escapeHandler=c},cancelFeedback:function(){this.closeCurrentBox(),this.currentDrawBox&&(this.currentDrawBox.remove(),this.currentDrawBox=null)},saveFeedback:function(n,t,s,o,i){if(!n.trim())return void alert("Please enter a comment");const a=this.generateId(),r=Date.now(),l={id:a,comment:n.trim(),comments:[{text:n.trim(),timestamp:r,author:{id:this.currentUser?.id||"anonymous",name:this.currentUser?.name||"Anonymous",email:this.currentUser?.email||""}}],position:{x:t,y:s,width:o,height:i,pageX:t,pageY:s,viewportWidth:e.innerWidth,viewportHeight:e.innerHeight,scrollX:e.scrollX,scrollY:e.scrollY},url:e.location.href,pathname:e.location.pathname,timestamp:new Date(r).toISOString(),userAgent:navigator.userAgent,screenSize:{width:e.screen.width,height:e.screen.height}};this.feedbacks.push(l),this.saveFeedbacks(),this.currentDrawBox&&(this.currentDrawBox.remove(),this.currentDrawBox=null),this.createMarker(l),this.closeCurrentBox(),this.updateStats(),console.log("Feedback saved:",l)},createMarker:function(e){const n=document.createElement("div");n.className="sv-feedback-marker";const t=this.feedbacks.indexOf(e)+1;n.style.left=`${e.position.pageX}px`,n.style.top=`${e.position.pageY}px`,n.style.width=`${e.position.width}px`,n.style.height=`${e.position.height}px`,n.style.display=this.markersVisible?"block":"none",n.dataset.feedbackId=e.id;const s=document.createElement("div");s.className="sv-feedback-marker-label",s.textContent=t,n.appendChild(s),n.onclick=n=>{n.stopPropagation(),this.showFeedback(e)},document.body.appendChild(n),this.updateMarkerTooltip(e.id),console.log("Created marker #"+t+" at:",{left:n.style.left,top:n.style.top,width:n.style.width,height:n.style.height})},showFeedback:function(n){this.closeCurrentBox();const t=document.querySelector(`[data-feedback-id="${n.id}"]`);t&&t.classList.add("active");const s=document.createElement("div");s.className="sv-feedback-box",s.style.visibility="hidden",s.style.left="0px",s.style.top="0px";let o="";n.comments&&n.comments.length>0&&(o=n.comments.map(e=>{const n=e.author?.name||"Unknown User";return`\n            <div class="sv-comment-item">\n              <div class="sv-comment-header">\n                <span class="${e.author?.id===this.currentUser?.id?"sv-comment-author-me":"sv-comment-author"}">${this.escapeHtml(n)}</span>\n                <span class="sv-comment-time">${new Date(e.timestamp).toLocaleString()}</span>\n              </div>\n              <div class="sv-comment-text">${this.escapeHtml(e.text)}</div>\n            </div>\n          `}).join("")),s.innerHTML=`\n        <div class="sv-feedback-box-header">\n          <div class="sv-feedback-box-title">\n            <span class="material-symbols-outlined" style="font-size: 18px; vertical-align: middle;">chat</span>\n            Annotation #${this.feedbacks.indexOf(n)+1}\n          </div>\n          <button class="sv-feedback-box-close">×</button>\n        </div>\n        <div class="sv-comments-history">\n          ${o||'<div class="sv-no-comments">No comments yet</div>'}\n        </div>\n        <textarea \n          class="sv-feedback-textarea" \n          placeholder="Add a comment..."\n          maxlength="${this.config.maxCommentLength}"\n        ></textarea>\n        <div class="sv-feedback-actions">\n          <button class="sv-feedback-btn sv-feedback-btn-danger">\n            <span class="material-symbols-outlined" style="font-size: 16px;">delete</span>\n            Delete\n          </button>\n          <button class="sv-feedback-btn sv-feedback-btn-secondary">Close</button>\n          <button class="sv-feedback-btn sv-feedback-btn-primary">Add Comment</button>\n        </div>\n      `,document.body.appendChild(s);const i=s.offsetWidth,a=s.offsetHeight;let r,l,c,d;if(t){const n=t.getBoundingClientRect();r=n.left+e.scrollX,l=n.top+e.scrollY,c=n.width,d=n.height}else r=n.position.pageX,l=n.position.pageY,c=n.position.width,d=n.position.height;const p=this.calculateBoxPosition(r,l,c,d,i,a);s.style.left=`${p.left}px`,s.style.top=`${p.top}px`,s.style.visibility="visible",this.currentBox={element:s,feedback:n,marker:t};const m=s.querySelector(".sv-feedback-textarea");m.focus(),s.querySelector(".sv-feedback-box-close").onclick=()=>this.closeCurrentBox(),s.querySelector(".sv-feedback-btn-secondary").onclick=()=>this.closeCurrentBox(),s.querySelector(".sv-feedback-btn-danger").onclick=()=>{confirm("Are you sure you want to delete this annotation and all its comments?")&&this.deleteAnnotation(n.id)},s.querySelector(".sv-feedback-btn-primary").onclick=()=>{const e=m.value.trim();e?(this.addCommentToFeedback(n.id,e),this.closeCurrentBox()):alert("Please enter a comment")};const h=e=>{"Escape"===e.key&&(this.closeCurrentBox(),document.removeEventListener("keydown",h))};document.addEventListener("keydown",h),s._escapeHandler=h},addCommentToFeedback:function(e,n){const t=this.feedbacks.find(n=>n.id===e);t&&(t.comments||(t.comments=[],t.comment&&t.comments.push({text:t.comment,timestamp:t.timestamp,author:{id:"legacy",name:"Unknown User",email:""}})),t.comments.push({text:n,timestamp:Date.now(),author:{id:this.currentUser?.id||"anonymous",name:this.currentUser?.name||"Anonymous",email:this.currentUser?.email||""}}),this.saveFeedbacks(),this.updateMarkerTooltip(e),console.log("Added comment to feedback #"+e))},updateMarkerTooltip:function(e){const n=this.feedbacks.find(n=>n.id===e);if(!n)return;const t=document.querySelector(`[data-feedback-id="${e}"]`);if(!t)return;const s=(n.comments||(n.comment?[{text:n.comment,timestamp:n.timestamp}]:[])).map((e,n)=>`${n+1}. ${e.text} (${new Date(e.timestamp).toLocaleString()})`).join("\n\n");t.title=s||"No comments"},deleteAnnotation:function(e){const n=this.feedbacks.findIndex(n=>n.id===e);if(-1===n)return;this.feedbacks.splice(n,1);const t=document.querySelector(`[data-feedback-id="${e}"]`);t&&t.remove(),this.closeCurrentBox(),this.saveFeedbacks(),this.updateStats(),console.log("Deleted annotation #"+e)},escapeHtml:function(e){const n=document.createElement("div");return n.textContent=e,n.innerHTML},closeCurrentBox:function(){this.currentBox&&(this.currentBox.element._escapeHandler&&document.removeEventListener("keydown",this.currentBox.element._escapeHandler),this.currentBox.marker&&this.currentBox.marker.classList.remove("active"),this.currentBox.element.remove(),this.currentBox=null)},saveFeedbacks:function(){try{localStorage.setItem(this.config.storageKey,JSON.stringify(this.feedbacks))}catch(e){console.error("Failed to save feedbacks:",e)}},loadFeedbacks:function(){try{const e=localStorage.getItem(this.config.storageKey);e&&(this.feedbacks=JSON.parse(e),this.displayMarkersForCurrentPage())}catch(e){console.error("Failed to load feedbacks:",e)}},displayMarkersForCurrentPage:function(){this.clearMarkers();const n=e.location.href,t=e.location.pathname,s=e.location.hash,o=this.feedbacks.filter(o=>{try{const i=new URL(o.url,e.location.origin);return o.url===n||(i.pathname===t&&i.hash===s||i.pathname===t&&!s&&!i.hash)}catch(e){return o.pathname===t}});o.forEach(e=>this.createMarker(e)),this.updateStats(),this.checkViewportMismatch(o),console.log(`Displayed ${o.length} markers for ${t}${s}`)},checkViewportMismatch:function(n){if(!n||0===n.length)return void this.hideViewportWarning();const t=n.map(e=>e.position).filter(e=>e&&e.viewportWidth&&e.viewportHeight);if(0===t.length)return void this.hideViewportWarning();const s=t[0],o=e.innerWidth,i=e.innerHeight,a=Math.abs(o-s.viewportWidth),r=Math.abs(i-s.viewportHeight);a>100||r>100?this.showViewportWarning(s.viewportWidth,s.viewportHeight):this.hideViewportWarning()},showViewportWarning:function(n,t){this.hideViewportWarning();const s=document.createElement("div");s.id="sv-viewport-warning",s.className="sv-viewport-warning",s.innerHTML=`\n        <div class="sv-viewport-warning-content">\n          <div class="sv-viewport-warning-header">\n            <span class="material-symbols-outlined sv-viewport-warning-icon">tune</span>\n            <strong>Display Mismatch Detected</strong>\n          </div>\n          <div class="sv-viewport-warning-body">\n            <div class="sv-viewport-metric">\n              <div class="sv-viewport-metric-label">\n                <span class="material-symbols-outlined">aspect_ratio</span>\n                Viewport Size\n              </div>\n              <div class="sv-viewport-metric-values">\n                <div>Expected: <strong>${n}×${t}</strong></div>\n                <div>Current: <strong id="sv-current-viewport">${e.innerWidth}×${e.innerHeight}</strong> <span id="sv-viewport-status" class="sv-status-badge sv-status-error">✗</span></div>\n              </div>\n            </div>\n            <div class="sv-viewport-metric">\n              <div class="sv-viewport-metric-label">\n                <span class="material-symbols-outlined">zoom_in</span>\n                Browser Zoom\n              </div>\n              <div class="sv-viewport-metric-values">\n                <div>Expected: <strong>100%</strong></div>\n                <div>Current: <strong id="sv-current-zoom">100%</strong> <span id="sv-zoom-status" class="sv-status-badge sv-status-ok">✓</span></div>\n              </div>\n            </div>\n            <div class="sv-viewport-metric">\n              <div class="sv-viewport-metric-label">\n                <span class="material-symbols-outlined">format_size</span>\n                Font Size\n              </div>\n              <div class="sv-viewport-metric-values">\n                <div>Expected: <strong>16px</strong></div>\n                <div>Current: <strong id="sv-current-fontsize">16px</strong> <span id="sv-fontsize-status" class="sv-status-badge sv-status-ok">✓</span></div>\n              </div>\n            </div>\n            <div class="sv-viewport-warning-hint">\n              <span class="material-symbols-outlined">info</span>\n              Adjust your window size and browser zoom to match the expected values. Indicators will turn green when fixed.\n            </div>\n          </div>\n        </div>\n      `,document.body.appendChild(s),this._originalViewport={width:n,height:t},this.startViewportMonitoring()},startViewportMonitoring:function(){this._viewportMonitorInterval&&clearInterval(this._viewportMonitorInterval),this._viewportMonitorInterval=setInterval(()=>{document.getElementById("sv-viewport-warning")?this.updateViewportMetrics():this.stopViewportMonitoring()},200)},stopViewportMonitoring:function(){this._viewportMonitorInterval&&(clearInterval(this._viewportMonitorInterval),this._viewportMonitorInterval=null)},updateViewportMetrics:function(){const n=document.getElementById("sv-current-viewport"),t=document.getElementById("sv-viewport-status"),s=document.getElementById("sv-current-zoom"),o=document.getElementById("sv-zoom-status"),i=document.getElementById("sv-current-fontsize"),a=document.getElementById("sv-fontsize-status");if(!n)return;const r=e.innerWidth,l=e.innerHeight;n.textContent=`${r}×${l}`;const c=Math.abs(r-this._originalViewport.width)<=20&&Math.abs(l-this._originalViewport.height)<=20;t.textContent=c?"✓":"✗",t.className="sv-status-badge "+(c?"sv-status-ok":"sv-status-error");const d=Math.round(100*e.devicePixelRatio);s.textContent=`${d}%`;const p=100===d;o.textContent=p?"✓":"✗",o.className="sv-status-badge "+(p?"sv-status-ok":"sv-status-error");const m=parseFloat(getComputedStyle(document.documentElement).fontSize);i.textContent=`${Math.round(m)}px`;const h=Math.abs(m-16)<=2;a.textContent=h?"✓":"✗",a.className="sv-status-badge "+(h?"sv-status-ok":"sv-status-error"),c&&p&&h&&setTimeout(()=>{this.hideViewportWarning()},2e3)},recheckViewportMismatch:function(){const n=e.location.href,t=e.location.pathname,s=e.location.hash,o=this.feedbacks.filter(o=>{try{const i=new URL(o.url,e.location.origin);return o.url===n||(i.pathname===t&&i.hash===s||i.pathname===t&&!s&&!i.hash)}catch(e){return o.pathname===t}});o.length>0&&this.checkViewportMismatch(o)},hideViewportWarning:function(){this.stopViewportMonitoring();const e=document.getElementById("sv-viewport-warning");e&&e.remove()},clearMarkers:function(){document.querySelectorAll(".sv-feedback-marker").forEach(e=>e.remove())},exportToFile:function(){if(0===this.feedbacks.length)return void alert("No annotations to export!");const e={version:this.version,exportDate:(new Date).toISOString(),totalAnnotations:this.feedbacks.length,annotations:this.exportFeedbacks()},n=JSON.stringify(e,null,2),t=new Blob([n],{type:"application/json"}),s=URL.createObjectURL(t),o=document.createElement("a");o.href=s,o.download=`syncvibes-annotations-${Date.now()}.json`,document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(s),console.log("Exported",this.feedbacks.length,"annotations")},handleImportFile:function(e){const n=e.target.files[0];if(!n)return;const t=new FileReader;t.onload=e=>{try{const n=JSON.parse(e.target.result),t=n.annotations||n;if(!Array.isArray(t))return void alert("Invalid file format! Expected an array of annotations.");const s=new Set(this.feedbacks.map(e=>e.id)),o=t.filter(e=>!s.has(e.id)).length,i=t.length-o;let a=`Import ${t.length} annotation(s)?\n\n`;if(a+="Preview:\n",o>0&&(a+=`• ${o} new annotation(s)\n`),i>0&&(a+=`• ${i} existing annotation(s) (will merge new comments)\n`),confirm(a)){const e=this.mergeFeedbacks(t);let n="Import complete!\n\n";e.newAnnotations>0&&(n+=`✓ Added ${e.newAnnotations} new annotation(s)\n`),e.newComments>0&&(n+=`✓ Added ${e.newComments} new comment(s) to existing annotations\n`),0===e.newAnnotations&&0===e.newComments&&(n="No new data to import. Everything is up to date!"),alert(n)}}catch(e){alert("Error reading file: "+e.message),console.error("Import error:",e)}},t.readAsText(n),e.target.value=""},mergeFeedbacks:function(e){let n=0,t=0;return e.forEach(e=>{const s=this.feedbacks.find(n=>n.id===e.id);if(s){s.comments||(s.comments=[]);const n=e.comments||[],o=s.comments,i=new Set(o.map(e=>`${e.timestamp}-${e.author?.id||"unknown"}-${e.text}`));n.forEach(e=>{const n=`${e.timestamp}-${e.author?.id||"unknown"}-${e.text}`;i.has(n)||(s.comments.push(e),t++)}),s.comments.sort((e,n)=>e.timestamp-n.timestamp),this.updateMarkerTooltip(s.id)}else this.feedbacks.push(e),n++}),this.saveFeedbacks(),this.displayMarkersForCurrentPage(),console.log(`Merged ${n} new annotations and ${t} new comments. Total: ${this.feedbacks.length} annotations`),{newAnnotations:n,newComments:t}},exportFeedbacks:function(){return JSON.parse(JSON.stringify(this.feedbacks))},importFeedbacks:function(e){this.feedbacks=e,this.saveFeedbacks(),this.displayMarkersForCurrentPage()},clearFeedbacks:function(){confirm("Clear all feedbacks?")&&(this.feedbacks=[],this.saveFeedbacks(),this.clearMarkers(),this.updateStats())},generateId:function(){return Date.now().toString(36)+Math.random().toString(36).substr(2)}};e.SyncVibe=n}(window);